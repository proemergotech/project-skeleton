image: docker:latest
services:
- docker:dind

stages:
- build
- release
- deploy

variables:
  IMAGE_NAME: $CI_REGISTRY/$CI_PROJECT_PATH
  IMAGE_NAME_BUILD: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA

.common-scripts:
- &gitlab-login
    docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

test:
  stage: build
  image: golang:1.14
  script:
    - go test -mod=readonly -race -v ./...

build:
  stage: build
  script:
  - *gitlab-login
  - >
    docker build --pull -t $IMAGE_NAME_BUILD
    --build-arg "APP_VERSION=${CI_COMMIT_SHA}"
    --build-arg GOPROXY=${GOPROXY}
    --build-arg GONOPROXY=${GONOPROXY}
    --build-arg GOPRIVATE=${GOPRIVATE}
    .
  - docker push $IMAGE_NAME_BUILD

verify:
  stage: build
  script:
    - apk update && apk add git
    - ./verify.sh
  only:
    - branches
  except:
    - master

latest:
  stage: release
  variables:
    IMAGE_NAME_LATEST: $CI_REGISTRY/$CI_PROJECT_PATH:latest
  dependencies: []
  script:
  - *gitlab-login
  - docker pull $IMAGE_NAME_BUILD
  - docker tag $IMAGE_NAME_BUILD $IMAGE_NAME_LATEST
  - docker push $IMAGE_NAME_LATEST
  only:
  - master

dev_auto:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  dependencies: []
  before_script: []
  environment:
    name: dev
    url: https://camplace.dev
  image: proemergotech/helm-kubectl-docker:latest
  script:
  - echo ${KUBE_CONFIG_DEV_BASE64} | base64 -d > /.kubeconfig
  - export KUBECONFIG=/.kubeconfig
  - /update_images.sh
  only:
  - master

dev_feature:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  dependencies: []
  before_script: []
  environment:
    name: dev
    url: https://camplace.dev
  image: proemergotech/helm-kubectl-docker:latest
  script:
  - echo ${KUBE_CONFIG_DEV_BASE64} | base64 -d > /.kubeconfig
  - export KUBECONFIG=/.kubeconfig
  - /update_images.sh
  when: manual
  except:
  - master

prod:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  dependencies: []
  before_script: []
  environment:
    name: prod
    url: https://camplace.com
  image: proemergotech/helm-kubectl-docker:latest
  script:
  - echo ${KUBE_CONFIG_PROD_BASE64} | base64 -d > /.kubeconfig
  - export KUBECONFIG=/.kubeconfig
  - /update_images.sh
  when: manual
  only:
  - master
